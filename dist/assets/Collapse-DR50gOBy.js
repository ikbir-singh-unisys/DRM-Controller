import{R as E,r,j as T,W as $,X as M,c as C,Y as h,Z as D,$ as j,a0 as v,a1 as G,a2 as L}from"./index-DQATgoiV.js";function i(...s){return s.filter(n=>n!=null).reduce((n,a)=>{if(typeof a!="function")throw new Error("Invalid Argument Type, must only provide functions, undefined, or null.");return n===null?a:function(...o){n.apply(this,o),a.apply(this,o)}},null)}const X={height:["marginTop","marginBottom"],width:["marginLeft","marginRight"]};function m(s,n){const a=`offset${s[0].toUpperCase()}${s.slice(1)}`,l=n[a],o=X[s];return l+parseInt(h(n,o[0]),10)+parseInt(h(n,o[1]),10)}const A={[D]:"collapse",[j]:"collapsing",[v]:"collapsing",[G]:"collapse show"},B={in:!1,timeout:300,mountOnEnter:!1,unmountOnExit:!1,appear:!1,getDimensionValue:m},F=E.forwardRef(({onEnter:s,onEntering:n,onEntered:a,onExit:l,onExiting:o,className:g,children:c,dimension:u="height",getDimensionValue:d=m,...p},y)=>{const e=typeof u=="function"?u():u,x=r.useMemo(()=>i(t=>{t.style[e]="0"},s),[e,s]),R=r.useMemo(()=>i(t=>{const f=`scroll${e[0].toUpperCase()}${e.slice(1)}`;t.style[e]=`${t[f]}px`},n),[e,n]),w=r.useMemo(()=>i(t=>{t.style[e]=null},a),[e,a]),I=r.useMemo(()=>i(t=>{t.style[e]=`${d(e,t)}px`,L(t)},l),[l,d,e]),N=r.useMemo(()=>i(t=>{t.style[e]=null},o),[e,o]);return T.jsx($,{ref:y,addEndListener:M,...p,"aria-expanded":p.role?p.in:null,onEnter:x,onEntering:R,onEntered:w,onExit:I,onExiting:N,childRef:c.ref,children:(t,f)=>E.cloneElement(c,{...f,className:C(g,c.props.className,A[t],e==="width"&&"collapse-horizontal")})})});F.defaultProps=B;export{F as C};
